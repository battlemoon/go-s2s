package outputter

import (
	"testing"

	"github.com/stretchr/testify/assert"
)

func TestEncodeString(t *testing.T) {
	s := encodeString("asdf")
	assert.Equal(t, []byte{0x0, 0x0, 0x0, 0x5, 0x61, 0x73, 0x64, 0x66, 0x0}, s)
}

func TestEncodeKeyValue(t *testing.T) {
	s := encodeKeyValue("asdf", "asdf")
	assert.Equal(t, []byte{0x0, 0x0, 0x0, 0x5, 0x61, 0x73, 0x64, 0x66, 0x0, 0x0, 0x0, 0x0, 0x5, 0x61, 0x73, 0x64, 0x66, 0x0}, s)
}

// func TestEncodeEvent(t *testing.T) {
// 	line := map[string]string{
// 		"_raw":       "foo",
// 		"index":      "main",
// 		"host":       "localhost",
// 		"source":     "bar",
// 		"sourcetype": "baz",
// 	}
// 	s := encodeEvent(line)
// 	assert.Equal(t, []byte{0x0, 0x0, 0x0, 0xc9, 0x0, 0x0, 0x0, 0x6, 0x0, 0x0, 0x0, 0x10, 0x5f, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x3a, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x0, 0x0, 0x0, 0x0, 0x5, 0x6d, 0x61, 0x69, 0x6e, 0x0, 0x0, 0x0, 0x0, 0xe, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x3a, 0x48, 0x6f, 0x73, 0x74, 0x0, 0x0, 0x0, 0x0, 0x10, 0x68, 0x6f, 0x73, 0x74, 0x3a, 0x3a, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x68, 0x6f, 0x73, 0x74, 0x0, 0x0, 0x0, 0x0, 0x10, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x3a, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x0, 0x0, 0x0, 0x0, 0xc, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x3a, 0x3a, 0x62, 0x61, 0x72, 0x0, 0x0, 0x0, 0x0, 0x14, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x3a, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x74, 0x79, 0x70, 0x65, 0x0, 0x0, 0x0, 0x0, 0x10, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x74, 0x79, 0x70, 0x65, 0x3a, 0x3a, 0x62, 0x61, 0x7a, 0x0, 0x0, 0x0, 0x0, 0x6, 0x5f, 0x64, 0x6f, 0x6e, 0x65, 0x0, 0x0, 0x0, 0x0, 0x6, 0x5f, 0x64, 0x6f, 0x6e, 0x65, 0x0, 0x0, 0x0, 0x0, 0x5, 0x5f, 0x72, 0x61, 0x77, 0x0, 0x0, 0x0, 0x0, 0x4, 0x66, 0x6f, 0x6f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x5, 0x5f, 0x72, 0x61, 0x77, 0x0}, s)
// }
